name: CI

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  test:
    name: Test (${{ matrix.toolchain }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable, nightly]
        os: [windows-latest, ubuntu-latest, macos-latest]
      
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - uses: Swatinem/rust-cache@v2
      - run: cargo test

  build-no-std:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          # Use a target without `std` to make sure we don't link to `std`
          targets: "x86_64-unknown-none,thumbv7m-none-eabi"
      - run: cargo build --target x86_64-unknown-none --no-default-features --features libm
      - run: cargo build --target x86_64-unknown-none --no-default-features --features libm,scale
      - run: cargo build --target x86_64-unknown-none --no-default-features --features libm,render
      - run: cargo build --target thumbv7m-none-eabi --no-default-features --features libm
      - run: cargo build --target thumbv7m-none-eabi --no-default-features --features libm,scale
      - run: cargo build --target thumbv7m-none-eabi --no-default-features --features libm,render

  miri:
    name: Miri
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: miri
      - run: cargo miri test
